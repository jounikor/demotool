(c) 2023 Jouni 'Mr.Spiv' Korhonen.

A demotool for remote execution of Amiga exes and ADFs
over the network from a PC/Mac/Amiga..

Developed entirely in my trusty A3000/040 setup using the
other trusty A600/020 as the test host. The project has been made to
compile under Amiga development environment. However, it is 
possible to compile the client side for other operating systems
as well (I test with very old macOS Catalina (dosdude's patch)).

The builds for Amiga are tested with vbcc and Roadshow networking
stack. As usual the makefiles are somewhat crappy. In order to
compile entire project for Amiga run the Makefile in the root
directory.

In order to compile the client for other operating systems run:
'make -C client all' in the root directory.


Currently implemented:
* Client for sending / reading files 
  - Compiles on Amiga (kick 2.x required)
  - Compiles on Mac etc Berkeley sockets compliant OSes.
  - Default plugin commands: lsg0, lsg1, adr0, adf0
  - Default remote commands: reboot, quit
  - Generic plugin commands: recv, send
    - Recv works like a 'peek' plugin.
    - Send works like a 'lsg0' plugin.
    - When using generic plugins you need to pass the plugin
      name to be used with '--plugin' option.

* server
  - Compiles on Amiga (kick 2.x required)

* plugins
  - Loadseg() executable launcher. 
  - Absolute address launcher. This plugin can be used to load
    arbitrary data into server Amiga RAM.
  - ADF writer. This allow 160 track ADF or 1 track ADF (for writing bootblock).
  - Peek to read arbitrary data from Server Amiga RAM to a
    client side file.

* Graphics Searcher
  - This is a tribute (and a reimplementation) of the classic "Graphic
    Searcher" originally by Terminators. A bit more system friendly
    (multitasks) and especially uses IDCMP for keyboard input.
  - Only for OCS/ECS and uses native screen modes. 
  - Kick 1.3 or better required.

* Demo startup
  - A highly configurable startup code for hardware banging demos (or
    alike). Used to take over and restrore the OS (including RTG systems)
    as cleanly as possible.. 100% PC relative if needed.
  - Includes an optional TRACE macro that can be used to output
    RawDoFmt() formatted strings to serial at speeds of 9600, 115200,
    or 230400 bps. You need to have Execbase functional when using
    the tracing.

* About plugin implementations:
  If you do not want to change the client code then design your plugins
  to work with generic plugin commands 'recv' and 'send'. In this case
  the plugin logic must follow the 'lsg0' or 'peek' plugins documented
  in the 'inc/protocol.h' header file.

  Why the whole plugin hassle anyway? Erm.. no particular reason other 
  than I wanted to try out writing fancy plugin system. The way it is
  done is used in other forms and projects already.

* Acknowledgements:
  - A big credit goes to SDI's (Dirk Stoecker) existing work on plugins.
  - Olaf Barthel for pointing out some stupid "misconcepts" with blocking
    sockets.
  - Bifat for inspiring (without his knowledge :) me to complete this
    so long time stalled project.
  - Frank Wille for helping a bit with vbcc and vlink foo.

Work in Progress:
* Generic cleanup of the code. It is rather messy in places.



